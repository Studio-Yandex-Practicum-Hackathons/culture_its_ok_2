# .github/workflows/**main.yml**
name: culture_its_ok_2

on:
  push:
    branches: [ "develop" ]

jobs:
  python:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install -r requirements.txt 


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: python
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 
      - name: Login to Docker 
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME_FRONT }}:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
            cd ${{ secrets.DEPLOY_PATH }}

            touch .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            echo URL_TABLE_FEEDBACK=${{ secrets.URL_TABLE_FEEDBACK }} >> .env

            cd infra
            
            sudo docker-compose stop
            sudo docker-compose rm web
            sudo docker-compose rm bot
            
            sudo docker-compose up -d
            sudo docker-compose exec -d web  python manage.py migrate